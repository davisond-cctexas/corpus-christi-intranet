<?php

/**
 * @file
 * Contains cctxmod.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function cctxmod_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the cctxmod module.
    case 'help.page.cctxmod':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('CCTX Custom Modifications') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function cctxmod_theme() {
  return [
    'cctxmod' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_page_top().
 */
function cctxmod_page_top(array &$page_top) {
  unset($page_top['bootstrap_site_alert']);
}

function _cctxmod_generate_alert() {
    // If active this is set.
    if (\Drupal::config('bootstrap_site_alert.settings')->get('bootstrap_site_alert_active') &&
    \Drupal::currentUser()->hasPermission('view bootstrap site alerts')) {
    // Get variables.
    $level = \Drupal::config('bootstrap_site_alert.settings')->get('bootstrap_site_alert_severity');

    $message = \Drupal::config('bootstrap_site_alert.settings')->get('bootstrap_site_alert_message');

    $alert = '<div class="main-alert"><div class="alert bs-site-alert ' . $level . '" role="alert">';
    $alert .= '<img src="/themes/cctx/img/shield-icon.png" alt="Shield" />';
    $alert .= '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>';

    $alert .= $message['value'];
    $alert .= '</div></div>';
    
    return $alert;
  }
}

/**
 * Implements hook_preprocess_page().
 */
function cctxmod_preprocess_page(&$variables) {
  $variables['#attached']['library'][] =  'cctxmod/cctxmod';
}

/**
 * Implements hook_form_alter();
 */
function cctxmod_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (\Drupal::routeMatch()->getRouteName() == 'node.add') {
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = '_cctxmod_node_form_submit';
      }
    }
  }
}

function _cctxmod_node_form_submit($form, FormStateInterface $form_state) {
  $node = $form_state->getFormObject()->getEntity();
  if ($node->id()) {
    $form_state->setRedirect('system.admin_content');
  }
}