{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  ]
%}


{% block paragraph %}
  <div class=mission {{ attributes.addClass(classes) }}>
    {% block content %}
    <div class="jumbotron">
<b><-!------------------------ THEME DEBUG -------------------->>----<br>
<-!-------------------- THEME HOOK: 'paragraph' -------------->>----------<br> </b>

<pre>
use \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;

/**
 * Allow modules to alter the built Panels output.
 *
 * @param array &$build
 *   The fully built render array.
 * @param \Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant $panels_display
 *   The Panels display that was rendered.
 */
function hook_panels_build_alter(array &$build, PanelsDisplayVariant $panels_display) {
  $build['extra'] = [
    '#markup' => '<div>Some extra markup</div>',
  ];
}
</pre>


 ---- FILE NAME SUGGESTIONS:
   * paragraph--mission--default.html.twig <br>
   x paragraph--mission.html.twig <br> 




      <h1 class="display-3">{{ content.field_headline }}</h1>
      <div class="lead">{{ content.field_body_department }}</div>
      <a class="btn btn-lg btn-success" href="{{ attribute(content.field_link_department.0, '#url').uri }}">{{ attribute(content.field_link_department.0, '#title') }}</a>
    </div>
<dd>{{ drupal_block('09baca56-d345-49ec-bddb-ee249e900b4d',false) }}</dd>
    {% endblock %}
  </div>
{% endblock paragraph %}



